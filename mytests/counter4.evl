module counter4;
    wire s0, s1, s2, s3, n0, n1, n2, n3, c0, c1, c2, c3;
    // input/output
    evl_one(c0);
    evl_output O(s3, s2, s1, s0);
    // states
    wire clk; evl_clock(clk);
    evl_dff F0(s0, n0, clk); evl_dff F1(s1, n1, clk);
    evl_dff F2(s2, n2, clk); evl_dff F3(s3, n3, clk);
    // compute n=s+1
    xor X0(n0, s0, c0); xor X1(n1, s1, c1);
    xor X2(n2, s2, c2); xor X3(n3, s3, c3);
    and A0(c1, s0, c0); and A1(c2, s1, c1);
    and A2(c3, s2, c2);
endmodule // counter4
